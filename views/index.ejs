<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management System</title>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            background-color: #fff;
            width: 40%;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .container h1 {
            font-size: 24px;
            margin-bottom: 20px;
            text-align: center;
            color: #007bff;
        }

        .form-container {
            margin-bottom: 20px;
        }

        input[type="text"],
        input[type="number"],
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
            background-color: #f9f9f9;
        }

        input[type="submit"], input[type="button"] {
            width: 100%;
            padding: 12px;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        input[type="submit"]:hover, input[type="button"]:hover {
            background-color: #0056b3;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        .edit-btn {
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 8px 12px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .edit-btn:hover {
            background-color: #218838;
        }

        .update-form {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            width: 60%;
            max-width: 400px;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            opacity: 0;
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .update-form.show {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
        }

        .table-wrapper {
            background-color: #fff;
            width: 80%;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

        .table-wrapper h2 {
            font-size: 20px;
            margin-bottom: 10px;
            text-align: center;
            color: #333;
        }

        .table-wrapper table {
            width: 100%;
            border-collapse: collapse;
        }

        .table-wrapper th, .table-wrapper td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table-wrapper th {
            background-color: #f2f2f2;
        }

        .dragging {
            opacity: 0.5;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Order Management System</h1>
        <div class="form-container">
            <form method="POST" action="/volume">
                <input type="text" placeholder="Volume" name="volume">
                <input type="submit" value="Update Volume">
            </form>
        </div>
        <div class="form-container">
            <form method="POST" action="/order" id="orderForm">
                <% let number = 1 %>
                <% all_orders.forEach(function(order) { %>
                    <% number += 1 %>
                <% }); %>
                <input type="number" name="Slno" value="<%= number %>" readonly>
                <input type="text" placeholder="Customer Name" name="name" >
                <select name="svolume">
                    <option selected value="0.5">500ml</option>
                    <option value="0.75">750ml</option>
                </select>
                <input type="number" placeholder="Quantity" name="quantity">
                <input type="button" value="Place Order" onclick="placeOrder()">
            </form>
        </div>

        <div class="update-form" id="updateform">
            <form method="POST" action="/update_order">
                <input type="number" name="uSlno" readonly>
                <input type="text" placeholder="Customer Name" name="uname" >
                <select name="usvolume">
                    <option selected value="0.5">500ml</option>
                    <option value="0.75">750ml</option>
                </select>
                <input type="number" placeholder="Quantity" name="uquantity">
                <input type="submit" value="Update Order">
            </form>
        </div>
    </div>

    <div class="table-wrapper">
        <% let total = 0; %>
        <% all_orders.forEach(data=>{%>
            <% let volume = data.svolume * data.quantity; %>
            <% total += volume %>
        <%}) %>  
        <h2>Total Volume Produced: <%= f_volume %></h2>
        <h2>Remaining Volume: <%= f_volume - total %></h2>
        <table id="ordersTable">
            <thead>
                <tr>
                    <th>Slno.</th>
                    <th>Name</th>
                    <th>Volume</th>
                    <th>Quantity</th>
                    <th>Total Quantity</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% all_orders.forEach((order, index) => { %>
                    <% let totalVolume = order.svolume * order.quantity; %>
                    <tr>
                        <td><%= order.Slno %></td>
                        <td><%= order.name %></td>
                        <td><%= order.svolume %></td>
                        <td><%= order.quantity %></td>
                        <td><%= totalVolume %></td>
                        <% total += totalVolume %>
                        <td>
                            <button class="edit-btn" onclick="editOrder('<%= order.Slno %>', '<%= order.name %>', '<%= order.svolume %>', '<%= order.quantity %>')">Edit</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            let draggedRow = null;
            rows.forEach(row => {
                row.draggable = true;

                row.addEventListener('dragstart', function() {
                    draggedRow = this;
                    this.classList.add('dragging');
                });

                row.addEventListener('dragend', function() {
                    this.classList.remove('dragging');
                    draggedRow = null;
                });

                row.addEventListener('dragover', function(event) {
                    event.preventDefault();
                });

                row.addEventListener('drop', function() {
                    if (draggedRow && draggedRow !== this) {
                        const draggedIndex = Array.from(rows).indexOf(draggedRow);
                        const targetIndex = Array.from(rows).indexOf(this);

                        const tbody = this.parentNode;
                        tbody.insertBefore(draggedRow, targetIndex > draggedIndex ? this.nextSibling : this);

                        updatecolors();
                    }
                });
            });
        });

        window.addEventListener('DOMContentLoaded', () => {
            const p_volume = '<%- f_volume%>';
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            let presentVolume = p_volume * 0.85;
            let rejectedVolume = p_volume * 0.15;
            
            rows.forEach(row => {
                const orderVolume = parseFloat(row.cells[2].innerText) * parseFloat(row.cells[3].innerText);
            
                    if (orderVolume <= presentVolume) {
                        row.style.backgroundColor = 'green';
                        presentVolume -= orderVolume;
                    } else if (orderVolume <= (presentVolume + rejectedVolume)) {
                        row.style.backgroundColor = 'yellow';
                        rejectedVolume -= (orderVolume - presentVolume  );
                        presentVolume = 0;
                    } else {
                        row.style.backgroundColor = 'red';
                        presentVolume = 0;
                        rejectedVolume = 0;
                    }
                });
            });

        function updatecolors(){
            const p_volume = '<%- f_volume%>';
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            let presentVolume = p_volume * 0.85;
            let rejectedVolume = p_volume * 0.15;
            
            rows.forEach(row => {
                const orderVolume = parseFloat(row.cells[2].innerText) * parseFloat(row.cells[3].innerText);
            
                    if (orderVolume <= presentVolume) {
                        row.style.backgroundColor = 'green';
                        presentVolume -= orderVolume;
                    } else if (orderVolume <= (presentVolume + rejectedVolume)) {
                        row.style.backgroundColor = 'yellow';
                        rejectedVolume -= (orderVolume - presentVolume  );
                        presentVolume = 0;
                    } else {
                        row.style.backgroundColor = 'red';
                        presentVolume = 0;
                        rejectedVolume = 0;
                    }
                });
        }

        function editOrder(Slno, name, svolume, quantity) {
            document.getElementsByName('uSlno')[0].value = Slno;
            document.getElementsByName('uname')[0].value = name;
            document.getElementsByName('usvolume')[0].value = svolume;
            document.getElementsByName('uquantity')[0].value = quantity;
            document.getElementById('updateform').style.display = 'block';
            document.getElementById('updateform').classList.add('show');
        }

        function placeOrder() {
            document.getElementById('orderForm').action = "/order";
            document.getElementById('orderForm').submit();
        }

    </script>
</body>
</html>